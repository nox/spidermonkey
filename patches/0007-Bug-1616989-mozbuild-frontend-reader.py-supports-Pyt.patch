From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ricky Stewart <rstewart@mozilla.com>
Date: Wed, 26 Feb 2020 00:35:49 +0000
Subject: [PATCH] Bug 1616989 - mozbuild/frontend/reader.py supports Python 3
 r=firefox-build-system-reviewers,mshal

Differential Revision: https://phabricator.services.mozilla.com/D63566

--HG--
extra : moz-landing-system : lando

diff --git a/python/mozbuild/mozbuild/frontend/reader.py b/python/mozbuild/mozbuild/frontend/reader.py
index 87fbd0049520..41279216dc29 100644
--- a/python/mozbuild/mozbuild/frontend/reader.py
+++ b/python/mozbuild/mozbuild/frontend/reader.py
@@ -506,8 +506,9 @@ class SandboxValidationError(Exception):
         s.write('The error occurred when validating the result of ')
         s.write('the execution. The reported error is:\n')
         s.write('\n')
-        s.write(''.join('    %s\n' % l
-                        for l in self.message.splitlines()))
+        s.write(''.join(
+            '    %s\n' % l
+            for l in super(SandboxValidationError, self).__str__().splitlines()))
         s.write('\n')
 
         return s.getvalue()
@@ -589,8 +590,9 @@ class BuildReaderError(Exception):
             s.write('The error occurred when validating the result of ')
             s.write('the execution. The reported error is:\n')
             s.write('\n')
-            s.write(''.join('    %s\n' % l
-                            for l in self.validation_error.message.splitlines()))
+            s.write(''.join(
+                '    %s\n' % l
+                for l in six.text_type(self.validation_error).splitlines()))
             s.write('\n')
         else:
             s.write('The error appears to be part of the %s ' % __name__)
@@ -1315,7 +1317,8 @@ class BuildReader(object):
 
         result = {}
         for path, paths in path_mozbuilds.items():
-            result[path] = reduce(lambda x, y: x + y, (contexts[p] for p in paths), [])
+            result[path] = six.moves.reduce(
+                lambda x, y: x + y, (contexts[p] for p in paths), [])
 
         return result, all_contexts
 
diff --git a/python/mozbuild/mozbuild/test/python.ini b/python/mozbuild/mozbuild/test/python.ini
index f0bf6d391179..9b7dd30f2b6b 100644
--- a/python/mozbuild/mozbuild/test/python.ini
+++ b/python/mozbuild/mozbuild/test/python.ini
@@ -14,6 +14,7 @@ subsuite = mozbuild
 [controller/test_clobber.py]
 [frontend/test_context.py]
 [frontend/test_namespaces.py]
+[frontend/test_reader.py]
 [frontend/test_sandbox.py]
 [test_artifact_cache.py]
 [test_base.py]
diff --git a/python/mozbuild/mozbuild/test/python2.ini b/python/mozbuild/mozbuild/test/python2.ini
index 0846b93adfe3..3712c8509c2a 100644
--- a/python/mozbuild/mozbuild/test/python2.ini
+++ b/python/mozbuild/mozbuild/test/python2.ini
@@ -21,4 +21,3 @@ skip-if = (os == "win")
 [configure/lint.py]
 [configure/test_lint.py]
 [frontend/test_emitter.py]
-[frontend/test_reader.py]
diff --git a/testing/mozbase/manifestparser/manifestparser/ini.py b/testing/mozbase/manifestparser/manifestparser/ini.py
index 1c8fbcd3a5fb..7577d3f16752 100644
--- a/testing/mozbase/manifestparser/manifestparser/ini.py
+++ b/testing/mozbase/manifestparser/manifestparser/ini.py
@@ -4,6 +4,7 @@
 
 from __future__ import absolute_import
 
+import io
 import os
 import sys
 
@@ -46,7 +47,7 @@ def read_ini(fp, defaults=None, default='DEFAULT', comments=None,
     key = value = None
     section_names = set()
     if isinstance(fp, string_types):
-        fp = open(fp)
+        fp = io.open(fp, encoding='utf-8')
 
     # read the lines
     for (linenum, line) in enumerate(fp.read().splitlines(), start=1):
diff --git a/testing/mozbase/manifestparser/manifestparser/manifestparser.py b/testing/mozbase/manifestparser/manifestparser/manifestparser.py
index fc12512cba92..2d6a277784f2 100755
--- a/testing/mozbase/manifestparser/manifestparser/manifestparser.py
+++ b/testing/mozbase/manifestparser/manifestparser/manifestparser.py
@@ -4,8 +4,9 @@
 
 from __future__ import absolute_import, print_function
 
-import json
 import fnmatch
+import io
+import json
 import os
 import shutil
 import sys
@@ -154,9 +155,9 @@ class ManifestParser(object):
             filename = os.path.abspath(filename)
             self.source_files.add(filename)
             if self.finder:
-                fp = self.finder.get(filename)
+                fp = self.finder.get(filename).open(mode='r')
             else:
-                fp = open(filename)
+                fp = io.open(filename, encoding='utf-8')
             here = os.path.dirname(filename)
         else:
             fp = filename
